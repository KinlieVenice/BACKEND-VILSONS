20250825	19:44:27	68f7b755-8edd-44d2-b934-b6997860e65b	PrismaClientValidationError: 
Invalid `prisma.user.findFirst()` invocation in
C:\Users\Huawei\Desktop\projects\vilsons-backend\controllers\registerController.js:13:39

  10     'message': "Name, username, email and password are required",
  11   });
  12 
→ 13 const duplicate = await prisma.user.findFirst({
       where: {
         OR: [
           {
             username: "kinli12"
           },
           {
             email: "kin@gmail.com"
           }
         ]
       }
     })

Unknown argument `username`. Available options are marked with ?.
20250825	19:47:49	bc166cfd-19e4-4da2-af24-15a1d2ca335b	PrismaClientValidationError: 
Invalid `prisma.user.findFirst()` invocation in
C:\Users\Huawei\Desktop\projects\vilsons-backend\controllers\registerController.js:12:39

   9     'message': "Name, username, email and password are required",
  10   });
  11 
→ 12 const duplicate = await prisma.user.findFirst({
       where: {
         OR: [
           {
             username: "kinli12"
           },
           {
             email: "kin@gmail.com"
           }
         ]
       }
     })

Unknown argument `username`. Available options are marked with ?.
20250827	19:59:19	3729add0-058f-4b89-b54c-715c918fc56e	TypeError: Cannot read properties of undefined (reading 'findFirst')
20250827	21:22:04	40f5db56-87ad-459f-8b3d-7626f9873cb9	ReferenceError: Cannot access 'user' before initialization
20250827	21:22:35	c14e25cc-bd10-4686-ba3a-8d30fd32073d	PrismaClientValidationError: 
Invalid `prisma.user.findFirst()` invocation in
C:\Users\Huawei\Desktop\projects\vilsons-backend\controllers\userController.js:82:34

  79   approvalStatus,
  80 } = req.body;
  81 
→ 82 const user = await prisma.user.findFirst({
       id: "05619ec0-1f25-4dc4-8d22-560a799143bc",
       ~~
     ? where?: UserWhereInput,
     ? orderBy?: UserOrderByWithRelationInput[] | UserOrderByWithRelationInput,
     ? cursor?: UserWhereUniqueInput,
     ? take?: Int,
     ? skip?: Int,
     ? distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
     })

Unknown argument `id`. Did you mean `skip`? Available options are marked with ?.
20250827	21:32:29	34d5222c-350a-4f95-aa3e-9c6f9e6a248b	SyntaxError: Expected double-quoted property name in JSON at position 79 (line 4 column 1)
20250830	13:15:37	2ba19a64-8e96-4993-9457-503abfb35f92	ReferenceError: error is not defined
20250830	15:33:00	8f96bd46-4289-4fc7-8e69-94fbddac8f12	SyntaxError: Unexpected token 'J', ...""module": Job_Orders"... is not valid JSON
20250902	12:56:46	daf998ce-0214-48c6-b51a-06b17ca3a7d3	ReferenceError: user is not defined
20250902	12:57:29	748f8eda-3e21-46f0-a994-62d5442db0f7	ReferenceError: user is not defined
20250902	13:12:32	6ae0359c-aca0-4000-bec5-103eb4972c3b	TypeError: Cannot read properties of undefined (reading 'name')
20250902	13:12:50	231668d9-e7c3-4725-a4be-9a6c40cbb981	TypeError: Cannot read properties of undefined (reading 'roleName')
20250902	15:12:07	d02606a7-957c-49b9-87e5-d43e7582c540	PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation in
C:\Users\Huawei\Desktop\projects\vilsons-backend\controllers\refreshController.js:11:39

   8 if (!refreshToken)
   9   return res.status(401).json({ message: "No cookies found" });
  10 
→ 11 const foundUser = await prisma.user.findUnique({
       where: {
         refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImZkMGZiMTBkLTM2YWUtNDBmMy05MWI0LTg0MzQ2YWJkNzVkMiIsImlhdCI6MTc1Njc5NDU2MCwiZXhwIjoxNzU2ODgwOTYwfQ.hqjotYOY0N1EaxopSdf47-Z_A1kGrU6ZwLRv_9T7AtQ",
     ?   id?: String,
     ?   username?: String,
     ?   email?: String,
     ?   AND?: UserWhereInput | UserWhereInput[],
     ?   OR?: UserWhereInput[],
     ?   NOT?: UserWhereInput | UserWhereInput[],
     ?   fullName?: StringFilter | String,
     ?   phone?: StringFilter | String,
     ?   hashPwd?: StringFilter | String,
     ?   description?: StringNullableFilter | String | Null,
     ?   approvalStatus?: EnumApprovalStatusFilter | ApprovalStatus,
     ?   createdAt?: DateTimeFilter | DateTime,
     ?   createdById?: StringNullableFilter | String | Null,
     ?   updatedAt?: DateTimeFilter | DateTime,
     ?   updatedById?: StringNullableFilter | String | Null,
     ?   admin?: AdminListRelationFilter,
     ?   customer?: CustomerListRelationFilter,
     ?   contractor?: ContractorListRelationFilter,
     ?   employee?: EmployeeListRelationFilter,
     ?   activityLog?: ActivityLogListRelationFilter,
     ?   roles?: UserRoleListRelationFilter,
     ?   edits?: UserEditListRelationFilter,
     ?   createdUsers?: UserListRelationFilter,
     ?   createdUserEdit?: UserEditListRelationFilter,
     ?   createdRole?: RoleListRelationFilter,
     ?   createdBranches?: BranchListRelationFilter,
     ?   createdBranchEdit?: BranchEditListRelationFilter,
     ?   createdTrucks?: TruckListRelationFilter,
     ?   createdTransaction?: TransactionListRelationFilter,
     ?   createdTransactionEdit?: TransactionEditListRelationFilter,
     ?   createdJobOrder?: JobOrderListRelationFilter,
     ?   createdJobOrderEdit?: JobOrderEditListRelationFilter,
     ?   transferredTruckOwnership?: TruckOwnershipListRelationFilter,
     ?   updatedUserEdits?: UserEditListRelationFilter,
     ?   updatedBranches?: BranchListRelationFilter,
     ?   updatedBranchEdits?: BranchEditListRelationFilter,
     ?   updatedTransaction?: TransactionListRelationFilter,
     ?   updatedTransactionEdit?: TransactionEditListRelationFilter,
     ?   updatedJobOrder?: JobOrderListRelationFilter,
     ?   updatedJobOrderEdit?: JobOrderEditListRelationFilter,
     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null
       },
       include: {
         roles: {
           include: {
             role: true
           }
         }
       }
     })

Argument `where` of type UserWhereUniqueInput needs at least one of `id`, `username` or `email` arguments. Available options are marked with ?.
20250902	15:12:43	24adffc6-da35-49bc-ace1-64971bbfb3a6	PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation in
C:\Users\Huawei\Desktop\projects\vilsons-backend\controllers\refreshController.js:11:39

   8 if (!refreshToken)
   9   return res.status(401).json({ message: "No cookies found" });
  10 
→ 11 const foundUser = await prisma.user.findUnique({
       where: {
         refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImZkMGZiMTBkLTM2YWUtNDBmMy05MWI0LTg0MzQ2YWJkNzVkMiIsImlhdCI6MTc1Njc5NDU2MCwiZXhwIjoxNzU2ODgwOTYwfQ.hqjotYOY0N1EaxopSdf47-Z_A1kGrU6ZwLRv_9T7AtQ",
     ?   id?: String,
     ?   username?: String,
     ?   email?: String,
     ?   AND?: UserWhereInput | UserWhereInput[],
     ?   OR?: UserWhereInput[],
     ?   NOT?: UserWhereInput | UserWhereInput[],
     ?   fullName?: StringFilter | String,
     ?   phone?: StringFilter | String,
     ?   hashPwd?: StringFilter | String,
     ?   description?: StringNullableFilter | String | Null,
     ?   approvalStatus?: EnumApprovalStatusFilter | ApprovalStatus,
     ?   createdAt?: DateTimeFilter | DateTime,
     ?   createdById?: StringNullableFilter | String | Null,
     ?   updatedAt?: DateTimeFilter | DateTime,
     ?   updatedById?: StringNullableFilter | String | Null,
     ?   admin?: AdminListRelationFilter,
     ?   customer?: CustomerListRelationFilter,
     ?   contractor?: ContractorListRelationFilter,
     ?   employee?: EmployeeListRelationFilter,
     ?   activityLog?: ActivityLogListRelationFilter,
     ?   roles?: UserRoleListRelationFilter,
     ?   edits?: UserEditListRelationFilter,
     ?   createdUsers?: UserListRelationFilter,
     ?   createdUserEdit?: UserEditListRelationFilter,
     ?   createdRole?: RoleListRelationFilter,
     ?   createdBranches?: BranchListRelationFilter,
     ?   createdBranchEdit?: BranchEditListRelationFilter,
     ?   createdTrucks?: TruckListRelationFilter,
     ?   createdTransaction?: TransactionListRelationFilter,
     ?   createdTransactionEdit?: TransactionEditListRelationFilter,
     ?   createdJobOrder?: JobOrderListRelationFilter,
     ?   createdJobOrderEdit?: JobOrderEditListRelationFilter,
     ?   transferredTruckOwnership?: TruckOwnershipListRelationFilter,
     ?   updatedUserEdits?: UserEditListRelationFilter,
     ?   updatedBranches?: BranchListRelationFilter,
     ?   updatedBranchEdits?: BranchEditListRelationFilter,
     ?   updatedTransaction?: TransactionListRelationFilter,
     ?   updatedTransactionEdit?: TransactionEditListRelationFilter,
     ?   updatedJobOrder?: JobOrderListRelationFilter,
     ?   updatedJobOrderEdit?: JobOrderEditListRelationFilter,
     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null
       },
       include: {
         roles: {
           include: {
             role: true
           }
         }
       }
     })

Argument `where` of type UserWhereUniqueInput needs at least one of `id`, `username` or `email` arguments. Available options are marked with ?.
20250902	15:12:59	5c59814c-9e67-4917-94ff-44e27ba24e1e	PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation in
C:\Users\Huawei\Desktop\projects\vilsons-backend\controllers\refreshController.js:11:39

   8 if (!refreshToken)
   9   return res.status(401).json({ message: "No cookies found" });
  10 
→ 11 const foundUser = await prisma.user.findUnique({
       where: {
         refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImZkMGZiMTBkLTM2YWUtNDBmMy05MWI0LTg0MzQ2YWJkNzVkMiIsImlhdCI6MTc1Njc5NDU2MCwiZXhwIjoxNzU2ODgwOTYwfQ.hqjotYOY0N1EaxopSdf47-Z_A1kGrU6ZwLRv_9T7AtQ",
     ?   id?: String,
     ?   username?: String,
     ?   email?: String,
     ?   AND?: UserWhereInput | UserWhereInput[],
     ?   OR?: UserWhereInput[],
     ?   NOT?: UserWhereInput | UserWhereInput[],
     ?   fullName?: StringFilter | String,
     ?   phone?: StringFilter | String,
     ?   hashPwd?: StringFilter | String,
     ?   description?: StringNullableFilter | String | Null,
     ?   approvalStatus?: EnumApprovalStatusFilter | ApprovalStatus,
     ?   createdAt?: DateTimeFilter | DateTime,
     ?   createdById?: StringNullableFilter | String | Null,
     ?   updatedAt?: DateTimeFilter | DateTime,
     ?   updatedById?: StringNullableFilter | String | Null,
     ?   admin?: AdminListRelationFilter,
     ?   customer?: CustomerListRelationFilter,
     ?   contractor?: ContractorListRelationFilter,
     ?   employee?: EmployeeListRelationFilter,
     ?   activityLog?: ActivityLogListRelationFilter,
     ?   roles?: UserRoleListRelationFilter,
     ?   edits?: UserEditListRelationFilter,
     ?   createdUsers?: UserListRelationFilter,
     ?   createdUserEdit?: UserEditListRelationFilter,
     ?   createdRole?: RoleListRelationFilter,
     ?   createdBranches?: BranchListRelationFilter,
     ?   createdBranchEdit?: BranchEditListRelationFilter,
     ?   createdTrucks?: TruckListRelationFilter,
     ?   createdTransaction?: TransactionListRelationFilter,
     ?   createdTransactionEdit?: TransactionEditListRelationFilter,
     ?   createdJobOrder?: JobOrderListRelationFilter,
     ?   createdJobOrderEdit?: JobOrderEditListRelationFilter,
     ?   transferredTruckOwnership?: TruckOwnershipListRelationFilter,
     ?   updatedUserEdits?: UserEditListRelationFilter,
     ?   updatedBranches?: BranchListRelationFilter,
     ?   updatedBranchEdits?: BranchEditListRelationFilter,
     ?   updatedTransaction?: TransactionListRelationFilter,
     ?   updatedTransactionEdit?: TransactionEditListRelationFilter,
     ?   updatedJobOrder?: JobOrderListRelationFilter,
     ?   updatedJobOrderEdit?: JobOrderEditListRelationFilter,
     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null
       },
       include: {
         roles: {
           include: {
             role: true
           }
         }
       }
     })

Argument `where` of type UserWhereUniqueInput needs at least one of `id`, `username` or `email` arguments. Available options are marked with ?.
20250902	15:34:56	3ec6b377-830d-4678-bc56-abc70e24a178	TypeError: Cannot read properties of undefined (reading 'map')
20250902	15:35:44	973640f1-62a0-4f01-8bfe-60892ec798f7	TypeError: Cannot read properties of undefined (reading 'map')
20250902	21:48:51	8fb12961-bacd-46aa-8106-56484ce3e919	PrismaClientValidationError: 
Invalid `prisma.user.findFirst()` invocation in
C:\Users\Huawei\Desktop\projects\vilsons-backend\controllers\logoutController.js:10:39

   7 if (!cookies?.jwt) return res.sendStatus(204); //no content
   8 const refreshToken = cookies.jwt;
   9 
→ 10 const foundUser = await prisma.user.findFirst({
       refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImZkMGZiMTBkLTM2YWUtNDBmMy05MWI0LTg0MzQ2YWJkNzVkMiIsImlhdCI6MTc1NjgyMDkxNSwiZXhwIjoxNzU2OTA3MzE1fQ.2TTjAjrGyzHwPUozegyE57IuCMWl-MXdvMZR-jjFXug",
       ~~~~~~~~~~~~
     ? where?: UserWhereInput,
     ? orderBy?: UserOrderByWithRelationInput[] | UserOrderByWithRelationInput,
     ? cursor?: UserWhereUniqueInput,
     ? take?: Int,
     ? skip?: Int,
     ? distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
     })

Unknown argument `refreshToken`. Available options are marked with ?.
20250905	00:55:48	861254d4-2e3f-48b3-84d3-980ad49cb2f4	TypeError: Cannot read properties of undefined (reading 'roleName')
20250905	01:00:50	3f903e2d-4be3-4610-8d6a-a8fa681f2116	TypeError: Cannot read properties of undefined (reading 'roleName')
20250905	14:51:42	73b8fe4b-b6be-4f8e-8abd-38f18e509c7d	TypeError: Cannot read properties of undefined (reading 'map')
20250905	15:02:47	abaa8b57-6561-48d7-9b9b-18202dfb6839	TypeError: Cannot read properties of undefined (reading 'map')
20250905	16:18:07	d6fdc3b1-87fe-4928-b8bc-147e3e22a8da	SyntaxError: Expected double-quoted property name in JSON at position 67 (line 6 column 1)
20250905	16:19:58	7188607e-e228-4dbe-9d15-42bd7c51f666	SyntaxError: Expected double-quoted property name in JSON at position 67 (line 5 column 1)
20250905	16:34:27	01ea031f-4e84-4950-8e38-29d00bc59f00	SyntaxError: Expected double-quoted property name in JSON at position 74 (line 8 column 1)
20250907	22:14:44	14d731aa-c98d-4382-b981-5dcbac31243d	Error: Invalid old password
20250907	22:21:06	96a5b828-7455-414a-970d-32282d50cc3c	Error: Invalid old password
20250911	15:43:54	9cfd1bb8-cd8a-46e5-ba71-d6af13f1c13d	SyntaxError: Expected double-quoted property name in JSON at position 53 (line 3 column 1)
20250912	20:08:10	8a487d70-ce9e-4a11-9f20-43ad745ca17c	ReferenceError: branchName is not defined
20250913	19:57:21	0aa21772-9345-43a4-8640-5594534a2cb6	PrismaClientValidationError: 
Invalid `prisma.branch.findFirst()` invocation in
C:\Users\Huawei\Desktop\projects\vilsons-backend\controllers\branchController.js:86:46

  83     .status(404)
  84     .json({ message: `User with ${req.body.id} not found` });
  85 
→ 86 const existingBranch = await prisma.branch.findFirst({
       where: {
         name: "yow",
         ~~~~
     ?   AND?: BranchWhereInput | BranchWhereInput[],
     ?   OR?: BranchWhereInput[],
     ?   NOT?: BranchWhereInput | BranchWhereInput[],
     ?   id?: StringFilter | String,
     ?   branchName?: StringFilter | String,
     ?   description?: StringNullableFilter | String | Null,
     ?   address?: StringFilter | String,
     ?   createdAt?: DateTimeFilter | DateTime,
     ?   createdByUser?: StringFilter | String,
     ?   updatedAt?: DateTimeFilter | DateTime,
     ?   updatedByUser?: StringFilter | String,
     ?   JobOrders?: JobOrderListRelationFilter,
     ?   OtherIncomes?: OtherIncomeListRelationFilter,
     ?   Equipments?: EquipmentListRelationFilter,
     ?   Overheads?: OverheadListRelationFilter,
     ?   JobOrderEdit?: JobOrderEditListRelationFilter,
     ?   OtherIncomeEdit?: OtherIncomeEditListRelationFilter,
     ?   EquipmentEdit?: EquipmentEditListRelationFilter,
     ?   OverheadExpensesEdit?: OverheadEditListRelationFilter,
     ?   edits?: BranchEditListRelationFilter,
     ?   createdBy?: UserScalarRelationFilter | UserWhereInput,
     ?   updatedBy?: UserScalarRelationFilter | UserWhereInput
       }
     })

Unknown argument `name`. Available options are marked with ?.
20250916	19:34:54	745da7b8-aea6-4e21-bc8e-f9b08e928cc0	PrismaClientValidationError: 
Invalid `prisma.branch.findUnique()` invocation in
C:\Users\Huawei\Desktop\projects\vilsons-backend\controllers\truckController.js:20:49

  17 .status(400)
  18 .json({ message: "Plate number, make, and model are required" });
  19 
→ 20 const existingTruck = await prisma.branch.findUnique({
       where: "1234"
              ~~~~~~
     })

Argument `where`: Invalid value provided. Expected BranchWhereUniqueInput, provided String.
20250916	19:35:05	7600d325-0fbc-4d49-b327-ae2835bb1724	PrismaClientValidationError: 
Invalid `prisma.branch.findFirst()` invocation in
C:\Users\Huawei\Desktop\projects\vilsons-backend\controllers\truckController.js:20:49

  17 .status(400)
  18 .json({ message: "Plate number, make, and model are required" });
  19 
→ 20 const existingTruck = await prisma.branch.findFirst({
       where: "1234"
              ~~~~~~
     })

Argument `where`: Invalid value provided. Expected BranchWhereInput, provided String.
20250916	19:36:36	d1782667-e30b-4c68-b64b-f2318aa736a0	PrismaClientValidationError: 
Invalid `prisma.branch.findFirst()` invocation in
C:\Users\Huawei\Desktop\projects\vilsons-backend\controllers\truckController.js:20:45

  17     .status(400)
  18     .json({ message: "Plate number, make, and model are required" });
  19 
→ 20 const existingTruck = await prisma.branch.findFirst({
       where: {
         plate: "1234",
         ~~~~~
     ?   AND?: BranchWhereInput | BranchWhereInput[],
     ?   OR?: BranchWhereInput[],
     ?   NOT?: BranchWhereInput | BranchWhereInput[],
     ?   id?: StringFilter | String,
     ?   branchName?: StringFilter | String,
     ?   description?: StringNullableFilter | String | Null,
     ?   address?: StringFilter | String,
     ?   createdAt?: DateTimeFilter | DateTime,
     ?   createdByUser?: StringFilter | String,
     ?   updatedAt?: DateTimeFilter | DateTime,
     ?   updatedByUser?: StringFilter | String,
     ?   JobOrders?: JobOrderListRelationFilter,
     ?   OtherIncomes?: OtherIncomeListRelationFilter,
     ?   Equipments?: EquipmentListRelationFilter,
     ?   Overheads?: OverheadListRelationFilter,
     ?   JobOrderEdit?: JobOrderEditListRelationFilter,
     ?   OtherIncomeEdit?: OtherIncomeEditListRelationFilter,
     ?   EquipmentEdit?: EquipmentEditListRelationFilter,
     ?   OverheadExpensesEdit?: OverheadEditListRelationFilter,
     ?   edits?: BranchEditListRelationFilter,
     ?   createdBy?: UserScalarRelationFilter | UserWhereInput,
     ?   updatedBy?: UserScalarRelationFilter | UserWhereInput
       }
     })

Unknown argument `plate`. Available options are marked with ?.
20250916	19:37:49	3f8e9af6-381f-4600-a0a9-8117725de0c7	PrismaClientValidationError: 
Invalid `prisma.truckEdit.findFirst()` invocation in
C:\Users\Huawei\Desktop\projects\vilsons-backend\controllers\truckController.js:21:47

  18     .json({ message: "Plate number, make, and model are required" });
  19 
  20 const existingTruck = await prisma.truck.findFirst({ where: { plate } });
→ 21 const pendingTruck = await prisma.truckEdit.findFirst({
       where: {
         plate: "1234",
         approvalStatus: "pending",
         ~~~~~~~~~~~~~~
     ?   AND?: TruckEditWhereInput | TruckEditWhereInput[],
     ?   OR?: TruckEditWhereInput[],
     ?   NOT?: TruckEditWhereInput | TruckEditWhereInput[],
     ?   id?: StringFilter | String,
     ?   truckId?: StringNullableFilter | String | Null,
     ?   make?: StringFilter | String,
     ?   model?: StringFilter | String,
     ?   createdAt?: DateTimeFilter | DateTime,
     ?   createdByUser?: StringFilter | String,
     ?   updatedAt?: DateTimeFilter | DateTime,
     ?   updatedByUser?: StringFilter | String,
     ?   truck?: TruckNullableScalarRelationFilter | TruckWhereInput | Null,
     ?   createdBy?: UserScalarRelationFilter | UserWhereInput,
     ?   updatedBy?: UserScalarRelationFilter | UserWhereInput
       }
     })

Unknown argument `approvalStatus`. Available options are marked with ?.
20250916	21:24:55	451e17b8-1d08-4bbf-a7d3-674fd353e815	TypeError: Cannot read properties of null (reading 'username')
20250916	21:25:10	c76e8ad8-24f2-4faa-b7de-6b7cceaaa178	TypeError: Cannot read properties of null (reading 'username')
20250916	21:25:58	0b978f29-deeb-4b8b-bc37-6330b8b30b84	TypeError: Cannot read properties of null (reading 'username')
20250916	21:26:20	c19fb9a9-a0a7-4d1e-80cc-8f0178987834	TypeError: Cannot read properties of null (reading 'username')
20250916	21:26:25	cd180b18-e2dd-451d-aff7-2584df75be88	TypeError: Cannot read properties of null (reading 'username')
20250916	21:30:24	90b19860-4c49-4df1-82ba-dadb848061b6	TypeError: Cannot read properties of null (reading 'username')
20250916	21:31:08	e9dd2642-627e-415b-a673-94517b46230f	TypeError: Cannot read properties of null (reading 'username')
20250916	21:33:27	29a42749-3a70-477e-b011-ee5287856e39	TypeError: Cannot read properties of null (reading 'username')
20250916	21:34:23	f1e3196b-7439-4bd1-9348-c84b888d389a	TypeError: Cannot read properties of null (reading 'username')
20250916	21:50:45	72f8c808-ba24-48ff-9b3c-d92fa3e9be98	ReferenceError: sanitizeAndValidate is not defined
20250916	21:51:22	a9f30f64-1782-4130-a3d3-76fc3ce22d24	Error: Invalid input in description: HTML or scripts are not allowed
20250916	21:51:34	401b1a78-e207-4bc7-a842-205c8992e75f	Error: Invalid input in description: HTML or scripts are not allowed
20250916	21:51:47	0be98775-abb7-4d3e-9a57-4195c721bdf3	Error: Invalid input in description: HTML or scripts are not allowed
20250916	21:51:51	de937467-7337-4e59-aaf9-c717eecf1f6d	Error: Invalid input in description: HTML or scripts are not allowed
20250916	21:52:42	11eefe16-3a36-4cd1-bc54-64cbb3eebbe8	Error: Invalid input in description: HTML or scripts are not allowed
20250916	21:53:19	d1facb1a-0566-4ca2-9dfa-f9b6b86063b8	Error: Invalid input in description: HTML or scripts are not allowed
20250916	22:25:01	77af2d98-764b-4049-bfe9-5bc9b6cca85b	SyntaxError: Expected ',' or '}' after property value in JSON at position 153 (line 6 column 4)
20250918	17:20:14	30531c29-d182-43c4-8a28-18845f123fdc	PrismaClientValidationError: 
Invalid `prisma.truck.findFirst()` invocation in
C:\Users\Huawei\Desktop\projects\vilsons-backend\controllers\truckController.js:76:36

  73 if (!req?.body?.id)
  74   return res.status(400).json({ message: "ID is required" });
  75 
→ 76 const truck = await prisma.truck.findFirst({
       id: "0b7ccb23-d20d-4967-a07d-fd82c10a99c4",
       ~~
     ? where?: TruckWhereInput,
     ? orderBy?: TruckOrderByWithRelationInput[] | TruckOrderByWithRelationInput,
     ? cursor?: TruckWhereUniqueInput,
     ? take?: Int,
     ? skip?: Int,
     ? distinct?: TruckScalarFieldEnum | TruckScalarFieldEnum[]
     })

Unknown argument `id`. Did you mean `skip`? Available options are marked with ?.
20250918	17:20:37	7e7fd931-d3b4-444c-8a3e-bee58f9f41c2	PrismaClientValidationError: 
Invalid `prisma.truck.findFirst()` invocation in
C:\Users\Huawei\Desktop\projects\vilsons-backend\controllers\truckController.js:76:36

  73 if (!req?.body.id)
  74   return res.status(400).json({ message: "ID is required" });
  75 
→ 76 const truck = await prisma.truck.findFirst({
       id: "0b7ccb23-d20d-4967-a07d-fd82c10a99c4",
       ~~
     ? where?: TruckWhereInput,
     ? orderBy?: TruckOrderByWithRelationInput[] | TruckOrderByWithRelationInput,
     ? cursor?: TruckWhereUniqueInput,
     ? take?: Int,
     ? skip?: Int,
     ? distinct?: TruckScalarFieldEnum | TruckScalarFieldEnum[]
     })

Unknown argument `id`. Did you mean `skip`? Available options are marked with ?.
20250918	17:20:50	d69e3aa6-2196-4711-be95-67919ac1b618	PrismaClientValidationError: 
Invalid `prisma.truck.findFirst()` invocation in
C:\Users\Huawei\Desktop\projects\vilsons-backend\controllers\truckController.js:76:36

  73 if (!req.body.id)
  74   return res.status(400).json({ message: "ID is required" });
  75 
→ 76 const truck = await prisma.truck.findFirst({
       id: "0b7ccb23-d20d-4967-a07d-fd82c10a99c4",
       ~~
     ? where?: TruckWhereInput,
     ? orderBy?: TruckOrderByWithRelationInput[] | TruckOrderByWithRelationInput,
     ? cursor?: TruckWhereUniqueInput,
     ? take?: Int,
     ? skip?: Int,
     ? distinct?: TruckScalarFieldEnum | TruckScalarFieldEnum[]
     })

Unknown argument `id`. Did you mean `skip`? Available options are marked with ?.
20250918	17:35:16	f7100d38-e868-4be8-b3da-572916957451	PrismaClientValidationError: 
Invalid `prisma.branch.findFirst()` invocation in
C:\Users\Huawei\Desktop\projects\vilsons-backend\controllers\branchController.js:79:36

  76 
  77 if (!req.body.id) return res.status(404).json({ message: "ID is required" });
  78 
→ 79 const user = await prisma.branch.findFirst({
       id: "862595b5-cd6d-4f17-b68f-4b863503dbff",
       ~~
     ? where?: BranchWhereInput,
     ? orderBy?: BranchOrderByWithRelationInput[] | BranchOrderByWithRelationInput,
     ? cursor?: BranchWhereUniqueInput,
     ? take?: Int,
     ? skip?: Int,
     ? distinct?: BranchScalarFieldEnum | BranchScalarFieldEnum[]
     })

Unknown argument `id`. Did you mean `skip`? Available options are marked with ?.
20250919	21:37:12	5833488e-98be-4753-a030-7827b2d9bba2	SyntaxError: Expected double-quoted property name in JSON at position 376 (line 18 column 1)
20250922	17:58:28	56b9c8b2-732d-425f-9e91-5dd5455d0e3b	SyntaxError: Expected double-quoted property name in JSON at position 136 (line 7 column 1)
20250922	18:09:02	3cfe1a62-1e39-4d8f-b30c-03c6c2cc193e	SyntaxError: Expected double-quoted property name in JSON at position 83 (line 5 column 1)
